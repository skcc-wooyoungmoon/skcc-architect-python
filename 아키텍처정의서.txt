시스템 아키텍처 설계 문서 (Architecture Design Document)
프로젝트명: [AGS 운영관리 시스템 (다국적 인재 소싱 관리 시스템)]
1. 프로젝트 목표 (Goal)
과제: 다국적 기술 인력을 소싱하고, 평가, 계약, 온/오프보딩 및 성과를 관리하는 과정이 여러 부서(PM, 사업팀, 협력사, 정보보호팀 등)에 걸쳐 분절되어 있고 수작업에 의존하여 비효율적입니다. 이로 인해 데이터의 정합성 확보가 어렵고, 통합적인 현황 파악 및 신속한 의사결정에 한계가 있습니다.
목표: 다국적 기술 인력 소싱부터 성과 관리까지의 전 과정을 지원하는 **'통합 운영관리 플랫폼'**을 구축하여, 인력 소싱에 소요되는 기간을 30% 단축하고 데이터 기반의 투명한 성과 관리를 통해 운영 효율성을 50% 향상시킨다.
2. 미래 비전 (Future Vision, 3~5년 후)
현재의 운영관리 시스템은 향후 AI 기반의 최적 인재 추천 및 프로젝트 리스크 예측 기능과 결합하여, 단순한 인력 관리 시스템을 넘어 데이터에 기반한 **'전략적 인적자원(HR) 의사결정 지원 플랫폼'**으로 발전시킨다.
3. 고객(사용자) 핵심 가치 (Customer Value)
1순위: 효율성 (Efficiency): 분절된 업무 프로세스를 통합하여 수작업을 최소화하고 업무 생산성을 극대화합니다.
2순위: 데이터 가시성 및 정확성 (Visibility & Accuracy): 계획 대비 실적(KPI), 인력 현황 등 핵심 데이터를 실시간으로 정확하게 파악하여 데이터 기반의 의사결정을 지원합니다.
3. 순위: 보안 및 통제 (Security & Control): 역할 기반 접근 제어와 감사 추적 기능으로 중요 정보와 문서를 안전하게 관리합니다.
4순위: 사용 편의성 (Usability): 다양한 사용자 역할(PM, 협력사, 운영팀 등)을 고려한 직관적이고 반응성이 뛰어난 UI를 제공합니다.
4. 미션 크리티컬 기능 (Mission-Critical Functions)
핵심 기능 1: 인재 검색, 제안서(SOW) 관리 및 평가를 포함한 인재 소싱 및 계약 프로세스
핵심 기능 2: 월별 투입 계획 등록 및 구매 시스템과 연동된 일일 실적 데이터 수집 및 KPI 자동 계산
핵심 기능 3: 온/오프보딩 감사를 위한 보안 서약서 등 주요 문서의 안전한 관리 및 다운로드
핵심 기능 4: 역할 기반 사용자 인증 및 권한 관리
5. 품질 속성 (Quality Attributes / 비기능적 요구사항)
5.1. 성능 (Performance)
응답 시간 (Latency):
주요 사용자 요청의 목표 응답 시간: 다중 필터를 사용한 후보자 검색 API - 500ms 이내
주요 시스템 간 호출의 목표 응답 시간: SOW 문서(PDF) 생성 및 다운로드 시작 - 3초 이내
처리량 (Throughput):
평균 처리량: 500 TPS (업무 시간 내 평균 요청)
최대(피크) 처리량: 구매 시스템으로부터 일일 실적 데이터를 수신하는 배치 작업 시 2,000 TPS 처리
5.2. 확장성 (Scalability)
부하 대응: 시스템의 주요 기능은 마이크로서비스로 분리하여 특정 기능(예: 실적 집계)에 부하가 집중될 경우 해당 서비스만 독립적으로 컨테이너 수를 자동으로 확장(Auto-scaling)하도록 설계한다.
기능 확장: MSA 구조를 채택하여 향후 신규 비즈니스 요구사항(예: 교육 관리 기능) 발생 시 기존 시스템에 미치는 영향을 최소화하고 독립적으로 서비스를 개발/배포할 수 있도록 설계한다.
5.3. 가용성 및 재해 복구 (Availability & DR)
가용성 목표: 99.9% (기업 내부 시스템임을 고려, 연간 약 8.76시간 이내의 장애 허용)
재해 복구 목표 (RTO/RPO):
RTO (복구 목표 시간): 1시간 이내 (쿠버네티스 환경에서의 자동 복구 및 백업 복원 포함)
RPO (복구 목표 시점): 15분 이내 (주기적인 DB 스냅샷 백업 기준)
5.4. 신뢰성 및 데이터 정합성 (Reliability & Consistency)
장애 허용 (Fault Tolerance): Kubernetes의 Liveness/Readiness Probe를 활용하여 비정상 상태의 컨테이너(Pod)를 자동으로 재시작하여 서비스 장애를 최소화한다.
데이터 정합성: 구매 시스템으로부터 수신한 일일 실적 데이터는 메시지 큐(또는 Staging 테이블)에 임시 저장 후 트랜잭션을 보장하며 DB에 반영하여 데이터 유실을 방지한다.
5.5. 보안 및 규제 준수 (Security & Compliance)
인증/인가: Okta와 연동된 OAuth 2.0을 통해 SSO(Single Sign-On) 인증을 구현하고, 시스템 내에서는 **역할 기반 접근 제어(RBAC)**를 통해 메뉴 및 데이터 접근 권한을 엄격히 통제한다.
데이터 보호: 보안 서약서 등 민감한 문서는 암호화하여 저장하고, 모든 통신 구간은 TLS로 암호화한다.
감사 및 로깅: 주요 데이터의 변경 이력과 사용자 활동(문서 다운로드 등)에 대한 감사 로그를 기록하고 보관한다.
6. 아키텍처 스타일 및 기술 결정
6.1. 전체 아키텍처 스타일
핵심 도메인을 중심으로 시스템을 4개의 논리적 단위로 분리하는 **MSA(마이크로서비스 아키텍처)**를 채택하여 서비스의 독립성과 확장성을 확보한다.
6.2. 인프라 및 배포 환경 (Infrastructure & Deployment)
배포 환경: 모든 마이크로서비스는 Docker 컨테이너로 패키징하여 Kubernetes 클러스터 환경에 배포한다.
CI/CD: GitHub Actions를 활용하여 소스코드 빌드, 테스트, 컨테이너 이미지 생성 및 Kubernetes 배포 파이프라인을 자동화한다.
6.3. 시스템 연동 및 API 전략 (Integration & API)
외부 연동: 구매 시스템과는 REST API를 통해 JSON 형식의 일일 실적 데이터를 주기적으로 연동한다.
내부 통신: 마이크로서비스 간의 동기식 호출은 REST API를 사용한다.
인증 연동: Okta와의 연동을 통해 전사 표준 인증 체계인 OAuth 2.0 기반의 SSO를 구현한다.
6.4. 핵심 도메인/서비스 분해 (Decomposition)
비즈니스 기능 단위를 기준으로 다음과 같이 4개의 마이크로서비스로 분해한다.
인재 소싱 및 평가 서비스: 후보자 검색, SOW 관리, 제안서 및 평가 관리
온/오프보딩 감사 서비스: 프로젝트 및 투입 인력 정보 조회, 보안 문서 관리
계획 및 성과 관리 서비스: 월별 투입 계획, 일일 실적 집계, KPI 대시보드
지식 관리 서비스: 가이드, Q&A, Lessons Learned 관리
6.5. 기술 스택 (Tech Stack)
백엔드: Java / Spring Boot - 엔터프라이즈 환경에서의 안정성과 생산성, 풍부한 생태계.
프론트엔드: Vue 3 - 반응적이고 효율적인 UI 개발, 다국어(한/영) 지원 용이성.
데이터베이스: PostgreSQL (단일 인스턴스), MyBatis (SQL에 대한 직접적인 제어 및 튜닝 요구사항 충족).
인프라: Kubernetes, Docker, GitHub Actions
인증: Okta (OAuth 2.0)
7. 주요 아키텍처 결정 사항 (ADR: Architecture Decision Record)
ADR-001: 데이터베이스 영속성 기술로 MyBatis 채택 (JPA 미사용)
결정(Decision): 데이터베이스 접근 기술로 ORM 프레임워크인 JPA 대신 SQL Mapper인 MyBatis를 사용한다.
배경/이유(Context/Reason): 본 시스템은 복잡한 조건의 인력 검색, 프로젝트별/등급별 실적 집계 등 복잡한 통계 및 리포팅 쿼리의 비중이 높다. MyBatis를 사용하면 SQL에 대한 완전한 제어가 가능하여, ORM 사용 시 발생할 수 있는 N+1 문제나 예측 불가능한 쿼리로 인한 성능 저하 리스크를 원천적으로 차단하고 세밀한 SQL 튜닝을 용이하게 할 수 있다.
대안(Alternatives Considered): JPA(Hibernate) 사용을 고려했으나, 복잡한 동적 쿼리 작성의 어려움과 런타임 시 SQL 성능 예측의 불확실성으로 인해 프로젝트 요구사항에 부합하지 않는다고 판단하여 제외했다.